<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: writing about coding | Maia McCormick]]></title>
  <link href="http://maiamcc.github.io/blog/categories/writing-about-coding/atom.xml" rel="self"/>
  <link href="http://maiamcc.github.io/"/>
  <updated>2019-09-07T23:14:53-04:00</updated>
  <id>http://maiamcc.github.io/</id>
  <author>
    <name><![CDATA[Maia Remez McCormick]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Asking for TOO MUCH Help?]]></title>
    <link href="http://maiamcc.github.io/blog/2014/09/16/asking-for-too-much-help/"/>
    <updated>2014-09-16T12:47:54-04:00</updated>
    <id>http://maiamcc.github.io/blog/2014/09/16/asking-for-too-much-help</id>
    <content type="html"><![CDATA[<p>(Apparently some people at Hacker School think I&rsquo;m an Iron Blogger, despite me being nothing of the sort. There&rsquo;s no money riding on whether or not I make consistent blog posts&mdash;but I figure I should do what I can to sustain this favorable impression of me!)</p>

<p>Since my HS halfway check-in, I&rsquo;ve resolved to ask more questions and not let myself get stuck banging my head against problems that could be solved in a hot second by any of the three people sitting next to me. I think that I&rsquo;ve done a pretty good job with this resolution; I ask for help way more frequently, and as a result, I think I get more done. However, I feel the need to remind myself that there is such a thing as <em>asking for too much help</em>.</p>

<p>Take this example: I was sitting down with Tristan, a fellow HSer, attempting to set up virtualenv and get all of my permissions and installs un-borked. I was totally in over my head, having never used virtualenv before, and he was helping me sort it out. There was some funky stuff that needed fixing having to do with my $PATH being invalid because one of the folder names contained a space. We dealt with that issue, and now most of the stuff worked, but I still couldn&rsquo;t manage to run bpython from inside my virtualenv. I showed Tristan the error message my computer was spewing, and asked him, &ldquo;What&rsquo;s going on?&rdquo;</p>

<p>His response: &ldquo;What do you think is going on?&rdquo;</p>

<p>Me: &ldquo;Well, it won&rsquo;t run bpython!&rdquo;</p>

<p>Him: &ldquo;Come on, you can do better than that.&rdquo;<!-- more --></p>

<p>When he said this, I was somewhat shocked to realize that I hadn&rsquo;t even fully read the text of the error message&mdash;I assumed that it would be gibberish to me, as such messages often are, and that I would need to find someone with greater terminal-fu to help me decipher it.</p>

<p>I can&rsquo;t remember now what exactly the problem was, but it was something having to do with the fact that my shiny new un-borked $PATH wasn&rsquo;t finding bpython because I had sudo installed it somewhere outside the virtualenv&hellip; (That sounds kind of illogical now that I write it, but I promise it was a real problem.) Regardless, by carefully reading the error message and talking it through with Tristan, I was able to figure out what had to be done pretty much on my own. It was super exciting, of course, because for most of Hacker School the terminal has remained an almost entirely opaque black box of sorcery (and possibly gnomes), but more than that, it made me sit up and realize that it <em>is</em> within my power to solve a lot of the problems that I come across.</p>

<p>Now I have two things to balance. Obviously, I want to keep asking questions, learning new things, keeping myself from getting stuck in ruts. But there&rsquo;s also something to be said for that fifteen-minute window to work on a problem before I turn to Zulip or the person next to me. I tend to assume that anything I don&rsquo;t know is a result of my limited programming background, and is something that I can learn <em>massively</em> faster from a person than from hunting around on StackOverflow. And yes, this is often the case, but when it&rsquo;s not&mdash;or even when it is&mdash;the trouble-shooting and debugging and StackOverflow-ing and playing around in the REPL are all supremely valuable skills. I can solve my own problems more often than I expect, and should remember that!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA['Wasting' Time?]]></title>
    <link href="http://maiamcc.github.io/blog/2014/08/12/wasting-time/"/>
    <updated>2014-08-12T19:22:19-04:00</updated>
    <id>http://maiamcc.github.io/blog/2014/08/12/wasting-time</id>
    <content type="html"><![CDATA[<p>At Hacker School today, I didn&rsquo;t get all that much done, and in my day&rsquo;s worth of non-progress I brushed up against two distinct kinds of &ldquo;wasted&rdquo; time.</p>

<p>The first is somewhat productive, as wasted time goes. I spent most of the afternoon barking up various wrong trees as I tried to figure out how to structure the next step of my current project (a contradance database, which I&rsquo;m sure I&rsquo;ll blog about for real soon). Kind of like a real-life breadth-first search where every node takes several hours.</p>

<p>I&rsquo;ve got a way to structure my data, and now I want to be able to search and sort and filter a bunch of these data-bundles. First I assumed I&rsquo;d write the search code in Python and worry about making it web-app-y later. I started brainstorming and had <em>no idea</em> how I would optimize my code, and then someone suggested I use <a href="datatables.net">Data Tables</a> a JQuery plug-in which will search and sort data super fast. So I spent a while reading up on Data Tables, looking through FAQs and add-ons and trying to figure out if it would give me some of the more advanced searching functionality I wanted. Someone else then suggested that if I ultimately wanted to search by a giant table of data invisible to the user, why don&rsquo;t I just use mySQL and go right to the database end of things? So I talked to Andrew and hashed out a vague plan and set up mySQL on my machine and found some nice-looking tutorials&hellip; only to have someone <em>else</em> point out that hey, you don&rsquo;t need to worry about learning SQL, <a href="https://www.djangoproject.com">Django</a> can do all of that for you and you still get to write in Python. I gave Django a quick look, got excited, and then whoops it was 5:00.<!-- more --></p>

<p>So, frustratingly, I ended this saga with not a jot of code written, not a step of a tutorial progressed through. Not a pleasant feeling. But I console myself with the thought that my day was still <em>somewhat</em> productive, by some metrics. Unlike when I started, I know what I&rsquo;m doing next. Unlike when I started, I know a bit more about Data Tables (which I think I <em>will</em> end up using for the front end of my final product) and mySQL (which is a good thing for anyone working with databases to understand). And so even if I&rsquo;m right back at point A, I can move forward from here. I might call this sort of time-wasting <em>productive time-wasting</em>, or maybe <em>foundational time-wasting</em>, since, though it doesn&rsquo;t accomplish anything itself, it lays a foundation for future accomplishment of things.</p>

<p>The second kind of time I wasted is harder to feel good about. It was <em>unproductive time-wasting</em> at its finest. I didn&rsquo;t even get a shaved yak out of it. By the time I gave up on the above because my brain was fried, I decided that I would spend an hour trying to get some dynamic content on my website and then head home around 6 (because I know that I don&rsquo;t do good work that late into the evening&mdash;better for me to leave earlier and <em>actually</em> not work, as opposed to pretending to work but accomplishing nothing).</p>

<p>I spent the next hour and a half poking around AJAX and history.js tutorials, still no closer to what I wanted. It&rsquo;s easy enough to make a link-click change the content of a div with AJAX, but what I really want is for the page URL to change as well, but without reloading the page (unless the user has a crappy browser that doesn&rsquo;t support AJAX), and for the page change to be accessible as history, forward- or back-able, etc. I figured out how to change a div with AJAX within the first 15 minutes, and the rest of that time was spent banging my head against history.js READMEs and tutorials and stack overflow topics.</p>

<p>Unlike that first chunk of wasted time, at the end of my dynamic content spree I felt no more knowledgeable than when I began, no better equipped to tackle the problem. All I felt was inadequate and impostor-y because I couldn&rsquo;t decipher any of the history.js walkthroughs or code examples.</p>

<p>So, lessons learned from all this: I want to start setting myself discrete chunks of time in which to do things. Not only will this make it easier to start on daunting projects<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup> and give my workflow more structure so that I&rsquo;m not jumping around all the time, it will (hopefully) keep me back from the edge of the black hole. After I&rsquo;ve spent an hour (especially late in the evening) on something like the dynamic content thing and a timer goes off on my computer, I have to step back and reevaluate. &ldquo;Am I getting stuff done? Is it time to ask for help? Is my brain too mushy to keep doing this? Is my current approach still working?&rdquo; Even if I do the same task for several hours straight, setting myself a little mental check-in every hour or every 45 minutes will, I hope, help keep me on track. Plus, I do much better with accountability when I have a concrete timeline. Yesterday I resolved that before lunch I would write a README for my <a href="https://github.com/maianess/markovgen">abandoned Markov generator</a> so that I could come back to it later, and I&rsquo;d go through a chapter of the <a href="http://interactivepython.org/runestone/static/pythonds/index.html">Interactive Python Algorithms and Data Structures</a> course. I did both of those things, and I felt <em>so good</em> about doing all the things that I&rsquo;d said I was going to do!</p>

<p>Also, I&rsquo;m curious how I will react to having more, smaller projects that I can work on in fits and starts, without oversaturating my brain with any one thing. I&rsquo;m thinking of giving this a try&mdash;maybe some of the coding exercises in the Interactive Python tutorial, maybe <a href="http://mathamy.com/pages/phonebook.html">Amy Hanlon&rsquo;s phonebook exercise</a>, or one of the mini-projects from the old HS <a href="https://hackpad.com/Iron-Forger-kEmauANGcV5">Ironforger</a> group. Something to put on the back-burners of my brain!</p>
<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p>For instance, after I finish this post, I&rsquo;m gonna go spend 30 minutes working on the actual content of my website, which is something I&rsquo;ve been putting of for <em>forever</em>.<a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]></content>
  </entry>
  
</feed>
